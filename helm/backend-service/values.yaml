# Backend service configuration
replicaCount: 1

image:
  repository: backend-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: api-tls
  #    hosts:
  #      - api.example.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

volumes: []
# - name: config-volume
#   configMap:
#     name: backend-config

volumeMounts: []
# - name: config-volume
#   mountPath: "/app/config"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables for the backend service
env:
  # Database connection settings
  - name: SPRING_DATASOURCE_URL
    value: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/tictactoe"
  - name: SPRING_DATASOURCE_USERNAME
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-postgresql"
        key: postgres-user
  - name: SPRING_DATASOURCE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-postgresql"
        key: postgres-password
  - name: SERVER_PORT
    value: "8080"
  - name: LOGGING_LEVEL_ROOT
    value: "INFO"
  - name: LOGGING_LEVEL_COM_TICTACTOE
    value: "DEBUG"
  - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    value: "health,info,metrics"
  - name: FRONTEND_URL
    value: "http://{{ .Release.Name }}-frontend:3000"

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    username: postgres
    password: postgres
    database: tictactoe
  primary:
    persistence:
      enabled: true
      size: 1Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m
