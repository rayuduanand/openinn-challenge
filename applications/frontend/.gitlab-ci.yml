image: docker.private.ae/docker-app/node:20-alpine

stages:
  - build
  - lint-helm
  - test
  - sonarqube-check
  - sast
  - airgap-bundle
  - deploy-azure

.base:
  tags:
    - app

node-build:
  stage: build
  extends: 
    - .base
  image: docker.private.ae/docker-app/node:20-alpine
  script:
    - npm ci
    - npm run build
  artifacts:
    expire_in: 1d
    paths:
      - dist/

lint-helm:
  stage: lint-helm
  image: docker.private.ae/docker-app/azure-kubectl-helm-az:v1
  script:
    - set -euo pipefail
    - cd $CI_PROJECT_DIR/../../helm
    - helm lint ./frontend
    - helm template ./frontend -f ./frontend/values-${DEPLOYMENT_ENV}.yaml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main"'
      when: on_success

sonarqube-check:
  stage: sonarqube-check
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests

############### SAST Testing #########
include:
  - template: Jobs/SAST.gitlab-ci.yml

semgrep-sast:
  extends: 
    - .base
  stage: scan
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_PATTERN || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
  when: manual

spotbugs-sast:
  stage: scan
  extends: 
    - .base
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_PATTERN || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
  when: manual

########### Trivy Scan ###########
trivy_scan:
  stage: scan
  image: docker.private.ae/docker-app/trivy:0.48.3
  script:
    - mkdir -p trivy-reports
    - trivy image --severity HIGH,CRITICAL --format json --output trivy-reports/report.json your-image:latest
    - trivy image --severity HIGH,CRITICAL --format template --template "@/contrib/html.tpl" --output trivy-reports/report.html your-image:latest
  artifacts:
    paths:
      - trivy-reports/report.json
      - trivy-reports/report.html
    when: always
    expire_in: 1 week

airgap-docker-tar:
  stage: airgap-bundle
  image: docker.private.ae/docker-app/docker:24.0.2-dind
  services:
    - docker:24.0.2-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t frontend:${DOCKER_TAG_RELEASE} .
    - docker save frontend:${DOCKER_TAG_RELEASE} -o frontend-${DOCKER_TAG_RELEASE}.tar
  artifacts:
    paths:
      - frontend-*.tar
    expire_in: 7d
  rules:
    - if: '$DEPLOYMENT_ENV == "airgap"'
      when: always

.deploy-azure:
  extends: .base
  stage: deploy-azure
  image: docker.private.ae/docker-app/azure-kubectl-helm-az:v1
  variables:
    HELM_RELEASE: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  script:
    - |
      if [ ! -d helm ]; then
        git clone "$HELM_REPO_URL" helm
      fi
    - cd helm
    - chmod +x deploy_aks.sh
    - ./deploy_aks.sh --component frontend --env "$DEPLOYMENT_ENV" --image-tag "$DOCKER_TAG_RELEASE" --namespace "$KUBE_NAMESPACE"

# Example deploy job for dev AKS (customize vars as needed)
deploy-dev-azure:
  extends: .deploy-azure
  environment:
    name: azure-dev
  variables:
    KUBE_NAMESPACE: $AZURE_DEV_K8S_NAMESPACE
    DEPLOYMENT_ENV: azuredev
    HELM_REPO_URL: $HELM_REPO_URL
    AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP_DEV
    AKS_CLUSTER_NAME: $AKS_CLUSTER_NAME_DEV
    AZURE_CLIENT_ID: $AZURE_CLIENT_ID_DEV
    AZURE_CLIENT_SECRET: $AZURE_CLIENT_SECRET_DEV
    AZURE_SUBSCRIPTION_ID: $AZURE_SUBSCRIPTION_ID
    AZURE_TENANT_ID: $AZURE_TENANT_ID
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" 
      when: on_success

deploy-staging-azure:
  extends: .deploy-azure
  environment:
    name: azure-staging
  variables:
    KUBE_NAMESPACE: $AZURE_DEV_K8S_NAMESPACE
    DEPLOYMENT_ENV: azuredev
    HELM_REPO_URL: $HELM_REPO_URL
    AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP_DEV
    AKS_CLUSTER_NAME: $AKS_CLUSTER_NAME_DEV
    AZURE_CLIENT_ID: $AZURE_CLIENT_ID_DEV
    AZURE_CLIENT_SECRET: $AZURE_CLIENT_SECRET_DEV
    AZURE_SUBSCRIPTION_ID: $AZURE_SUBSCRIPTION_ID
    AZURE_TENANT_ID: $AZURE_TENANT_ID
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^staging-.*/'
      when: on_success

deploy-prod-azure:
  extends: .deploy-azure
  environment:
    name: azure-staging
  variables:
    KUBE_NAMESPACE: $AZURE_DEV_K8S_NAMESPACE
    DEPLOYMENT_ENV: azuredev
    HELM_REPO_URL: $HELM_REPO_URL
    AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP_DEV
    AKS_CLUSTER_NAME: $AKS_CLUSTER_NAME_DEV
    AZURE_CLIENT_ID: $AZURE_CLIENT_ID_DEV
    AZURE_CLIENT_SECRET: $AZURE_CLIENT_SECRET_DEV
    AZURE_SUBSCRIPTION_ID: $AZURE_SUBSCRIPTION_ID
    AZURE_TENANT_ID: $AZURE_TENANT_ID
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release-.*/'
      when: on_success